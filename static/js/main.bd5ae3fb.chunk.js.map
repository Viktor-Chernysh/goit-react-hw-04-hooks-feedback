{"version":3,"sources":["Components/Feedback/Feedback.module.css","Components/Section/Section.module.css","Components/Section/Section.js","Components/Feedback/Notification.js","Components/Feedback/Button.js","Components/Feedback/Statistics.js","Components/Feedback/Feedback.js","App.js","index.js"],"names":["module","exports","Section","props","title","children","className","s","section","Notification","message","defaultProps","Button","onClick","name","button","type","Statistics","good","neutral","bad","total","posFeedback","statistics_item","Feedback","useState","setGood","setNeutral","setBad","handleClick","e","target","prev","p","totalElements","Math","round","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,OAAS,yBAAyB,gBAAkB,oC,mBCAtED,EAAOC,QAAU,CAAC,QAAU,2B,6JCUbC,MATf,SAAiBC,GACf,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,6BAAKJ,IACJC,MCJP,SAASI,EAAaN,GACpB,IAAQO,EAAYP,EAAZO,QACR,OACE,8BACE,cAAC,EAAD,CAASN,MAAOM,MAIPD,QACfA,EAAaE,aAAe,CAC1BD,QAAS,qB,oBCFIE,MARf,SAAgBT,GACd,IAAQU,EAAkBV,EAAlBU,QAASC,EAASX,EAATW,KACjB,OACE,wBAAQR,UAAWC,IAAEQ,OAAQC,KAAK,SAASF,KAAMA,EAAMD,QAASA,EAAhE,SACGC,KCkBQG,MAtBf,SAAoBd,GAClB,IAAQe,EAA2Cf,EAA3Ce,KAAMC,EAAqChB,EAArCgB,QAASC,EAA4BjB,EAA5BiB,IAAKC,EAAuBlB,EAAvBkB,MAAOC,EAAgBnB,EAAhBmB,YACnC,OACE,qCACE,oBAAGhB,UAAWC,IAAEgB,gBAAhB,kBACO,+BAAOL,OAEd,oBAAGZ,UAAWC,IAAEgB,gBAAhB,qBACU,+BAAOJ,OAEjB,oBAAGb,UAAWC,IAAEgB,gBAAhB,iBACM,+BAAOH,OAEb,uCACQ,+BAAOC,OAEf,mDACoB,iCAAOC,EAAP,cCdX,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOL,EAAP,KAAYQ,EAAZ,KAEMC,EAAc,SAAAC,GAElB,OADiBA,EAAEC,OAAXjB,MAEN,IAAK,OACHY,GAAQ,SAAAM,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,UACHL,GAAW,SAAAK,GAAI,OAAIA,EAAO,KAC1B,MACF,IAAK,MACHJ,GAAO,SAAAK,GAAC,OAAIA,EAAI,OAIhBC,EAAgB,WACpB,OAAOhB,EAAOC,EAAUC,GAM1B,OACE,qCACE,eAAC,EAAD,CAAShB,MAAM,wBAAf,UACE,cAAC,EAAD,CAAQU,KAAK,OAAOD,QAASgB,IAC7B,cAAC,EAAD,CAAQf,KAAK,UAAUD,QAASgB,IAChC,cAAC,EAAD,CAAQf,KAAK,MAAMD,QAASgB,OAE7BK,IAAkB,EACjB,cAAC,EAAD,CAAS9B,MAAM,aAAf,SACE,cAAC,EAAD,CAEEc,KAAMA,EACNE,IAAKA,EACLD,QAASA,EACTE,MAAOa,IACPZ,YAlBDa,KAAKC,MAAOlB,EAAOgB,IAAmB,SAsBzC,cAAC,EAAD,CAAcxB,QAAQ,yBCzCf2B,MARf,WACE,OACE,8BACE,cAACb,EAAD,OCANc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bd5ae3fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__3YY4O\",\"statistics_item\":\"Feedback_statistics_item__2urAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3-tAm\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\nfunction Section(props) {\r\n  const { title, children } = props;\r\n  return (\r\n    <section className={s.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nexport default Section;\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.any,\r\n};\r\n","import Section from '../Section/Section';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Notification(props) {\r\n  const { message } = props;\r\n  return (\r\n    <div>\r\n      <Section title={message} />\r\n    </div>\r\n  );\r\n}\r\nexport default Notification;\r\nNotification.defaultProps = {\r\n  message: 'No feedback given',\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import s from './Feedback.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button(props) {\r\n  const { onClick, name } = props;\r\n  return (\r\n    <button className={s.button} type=\"button\" name={name} onClick={onClick}>\r\n      {name}\r\n    </button>\r\n  );\r\n}\r\nexport default Button;\r\nButton.propTypes = {\r\n  name: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n","import s from './Feedback.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics(props) {\r\n  const { good, neutral, bad, total, posFeedback } = props;\r\n  return (\r\n    <>\r\n      <p className={s.statistics_item}>\r\n        Good:<span>{good}</span>\r\n      </p>\r\n      <p className={s.statistics_item}>\r\n        Neutral:<span>{neutral}</span>\r\n      </p>\r\n      <p className={s.statistics_item}>\r\n        Bad:<span>{bad}</span>\r\n      </p>\r\n      <p>\r\n        Total:<span>{total}</span>\r\n      </p>\r\n      <p>\r\n        Positive feedback:<span>{posFeedback}%</span>\r\n      </p>\r\n    </>\r\n  );\r\n}\r\nexport default Statistics;\r\nStatistics.propTypes = {\r\n  state: PropTypes.object,\r\n  total: PropTypes.number.isRequired,\r\n  posFeedback: PropTypes.number.isRequired,\r\n};\r\n","import { useState } from 'react';\r\nimport Section from '../Section/Section';\r\nimport Notification from './Notification';\r\nimport Button from './Button';\r\nimport Statistics from './Statistics';\r\n\r\nexport default function Feedback() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const handleClick = e => {\r\n    const { name } = e.target;\r\n    switch (name) {\r\n      case 'good':\r\n        setGood(prev => prev + 1);\r\n        break;\r\n      case 'neutral':\r\n        setNeutral(prev => prev + 1);\r\n        break;\r\n      case 'bad':\r\n        setBad(p => p + 1);\r\n        break;\r\n    }\r\n  };\r\n  const totalElements = () => {\r\n    return good + neutral + bad;\r\n  };\r\n  const positiveFeedback = () => {\r\n    return Math.round((good / totalElements()) * 100);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Please leave feedback\">\r\n        <Button name=\"good\" onClick={handleClick} />\r\n        <Button name=\"neutral\" onClick={handleClick} />\r\n        <Button name=\"bad\" onClick={handleClick} />\r\n      </Section>\r\n      {totalElements() > 0 ? (\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            // state={this.state}\r\n            good={good}\r\n            bad={bad}\r\n            neutral={neutral}\r\n            total={totalElements()}\r\n            posFeedback={positiveFeedback()}\r\n          />\r\n        </Section>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n// class Feedback extends Component {\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   };\r\n\r\n//   handleClick = e => {\r\n//     const { name } = e.target;\r\n//     this.setState(prevState => {\r\n//       return {\r\n//         [name]: prevState[name] + 1,\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   totalElements = () => {\r\n//     const { good, neutral, bad } = this.state;\r\n//     return good + neutral + bad;\r\n//   };\r\n//   positiveFeedback = () => {\r\n//     return Math.round((this.state.good / this.totalElements()) * 100);\r\n//   };\r\n//   render() {\r\n//     const { handleClick, positiveFeedback, totalElements } = this;\r\n\r\n//     return (\r\n//       <>\r\n//         <Section title=\"Please leave feedback\">\r\n//           <Button name=\"good\" onClick={handleClick} />\r\n//           <Button name=\"neutral\" onClick={handleClick} />\r\n//           <Button name=\"bad\" onClick={handleClick} />\r\n//         </Section>\r\n//         {totalElements() > 0 ? (\r\n//           <Section title=\"Statistics\">\r\n//             <Statistics\r\n//               state={this.state}\r\n//               total={totalElements()}\r\n//               posFeedback={positiveFeedback()}\r\n//             />\r\n//           </Section>\r\n//         ) : (\r\n//           <Notification message=\"No feedback given\" />\r\n//         )}\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n// export default Feedback;\r\n","import './App.css';\nimport Feedback from './Components/Feedback';\nfunction App() {\n  return (\n    <div>\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}